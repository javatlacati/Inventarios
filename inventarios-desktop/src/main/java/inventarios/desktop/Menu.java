/* 
 * Copyright (C) 2019 Ruslan LÃ³pez Carro
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package inventarios.desktop;

import inventarios.desktop.navigation.NavigationHandler;
import inventarios.service.restclient.AuthorizationService;
import inventarios.service.restclient.LoginUsersService;
import inventarios.util.ShutdownManager;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.ResourceBundle;
import java.util.Stack;
import org.springframework.beans.factory.annotation.Qualifier;

/**
 *
 * @author Oscar Marroquin
 */
@Component
public class Menu extends javax.swing.JFrame {


    // Variables declaration - do not modify//GEN-BEGIN:variables
    JButton btnAdmin;
    // End of variables declaration//GEN-END:variables
    private NavigationHandler navigationHandler;
    private ShutdownManager shutdownManager;
    private AuthorizationService authorizationService;

    private final Stack<JFrame> previouses;

    /**
     * Creates new form Menu
     */
    @Autowired
    public Menu(@Qualifier("menuVisitor") NavigationHandler navigationHandler,
            AuthorizationService authorizationService,
            ShutdownManager shutdownManager) {
        this.navigationHandler = navigationHandler;
        this.authorizationService = authorizationService;
        this.shutdownManager = shutdownManager;
        initComponents();
        this.setLocationRelativeTo(null);
        this.getContentPane().setBackground(Color.orange);
        cerrar();
        previouses = new Stack<>();
    }

    public void add(JFrame e) {
        previouses.push(e);
    }

    public void removeLast() {
        previouses.pop();
    }

    //Método para confirmar el cierre deJFrame//
    public void cerrar() {
        try {
            this.setDefaultCloseOperation(Menu.DO_NOTHING_ON_CLOSE);
            addWindowListener(new WindowAdapter() {
                public void windowClosing(WindowEvent e) {
                    shutdownManager.confirmExit();
                }
            });
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    @Override
    public void setVisible(boolean visible) {
        if(visible){
            btnAdmin.setVisible(authorizationService.userHasPermission("AdminMenu"));
        }
        super.setVisible(visible);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JLabel jLabel2 = new JLabel();
        JPanel titlePanel = new JPanel();
        JLabel lblTitle = new JLabel();
        JPanel contentPanel = new JPanel();
        JPanel optionsPanel = new JPanel();
        JButton btnInventory = new JButton();
        JButton btnTransaction = new JButton();
        JButton btnOrders = new JButton();
        JButton btnBilling = new JButton();
        JButton btnProvider = new JButton();
        JButton btnAbout = new JButton();
        JButton btnEmployeeRecords = new JButton();
        JButton btnCredits = new JButton();
        JButton btnProfile = new JButton();
        btnAdmin = new JButton();
        JPanel imageAndNavigationPanel = new JPanel();
        JPanel imagePanel = new JPanel();
        JLabel lblImage = new JLabel();
        JPanel navivgationPanel = new JPanel();
        JButton btnClose = new JButton();
        JButton btnGetBack = new JButton();
        JMenuBar menuBar = new JMenuBar();
        JMenu mnuInventory = new JMenu();
        JMenuItem mnuInventories = new JMenuItem();
        JMenuItem mnuBills = new JMenuItem();
        JMenuItem mnuProvider = new JMenuItem();
        JMenu mnuServices = new JMenu();
        JMenuItem mnuOrders = new JMenuItem();
        JMenuItem mnuTransactions = new JMenuItem();
        JMenu mnuAbout = new JMenu();
        JMenuItem mnuAboutItem = new JMenuItem();
        JMenuItem mnuGetBack = new JMenuItem();

        jLabel2.setIcon(new ImageIcon(getClass().getResource("/ImgFondos/fondo 1.png"))); // NOI18N

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        ResourceBundle bundle = ResourceBundle.getBundle("inventarios/gui/desktop/Bundle"); // NOI18N
        setTitle(bundle.getString("Menu.title")); // NOI18N
        setIconImage(new ImageIcon(getClass().getResource("/ImgFondos/Icono.png")).getImage());
        setMinimumSize(new Dimension(500, 250));

        lblTitle.setFont(new Font("Tw Cen MT", 3, 24)); // NOI18N
        lblTitle.setForeground(new Color(51, 0, 255));
        lblTitle.setText(bundle.getString("Menu.lblTitle.text")); // NOI18N
        titlePanel.add(lblTitle);

        getContentPane().add(titlePanel, BorderLayout.PAGE_START);

        contentPanel.setLayout(new BoxLayout(contentPanel, BoxLayout.X_AXIS));

        optionsPanel.setLayout(new GridLayout(5, 2));

        btnInventory.setText(bundle.getString("Menu.btnInventory.text")); // NOI18N
        btnInventory.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        btnInventory.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnInventoryActionPerformed(evt);
            }
        });
        optionsPanel.add(btnInventory);

        btnTransaction.setText(bundle.getString("Menu.btnTransaction.text")); // NOI18N
        btnTransaction.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        btnTransaction.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnTransactionActionPerformed(evt);
            }
        });
        optionsPanel.add(btnTransaction);

        btnOrders.setText(bundle.getString("Menu.btnOrders.text")); // NOI18N
        btnOrders.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        btnOrders.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnOrdersActionPerformed(evt);
            }
        });
        optionsPanel.add(btnOrders);

        btnBilling.setText(bundle.getString("Menu.btnBilling.text")); // NOI18N
        btnBilling.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnBillingActionPerformed(evt);
            }
        });
        optionsPanel.add(btnBilling);

        btnProvider.setText(bundle.getString("Menu.btnProvider.text")); // NOI18N
        btnProvider.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        btnProvider.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnProviderActionPerformed(evt);
            }
        });
        optionsPanel.add(btnProvider);

        btnAbout.setText(bundle.getString("Menu.btnAbout.text")); // NOI18N
        btnAbout.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnAboutActionPerformed(evt);
            }
        });
        optionsPanel.add(btnAbout);

        btnEmployeeRecords.setText(bundle.getString("Menu.btnEmployeeRecords.text")); // NOI18N
        btnEmployeeRecords.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnEmployeeRecordsActionPerformed(evt);
            }
        });
        optionsPanel.add(btnEmployeeRecords);

        btnCredits.setText(bundle.getString("Menu.btnCredits.text")); // NOI18N
        btnCredits.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnCreditsActionPerformed(evt);
            }
        });
        optionsPanel.add(btnCredits);

        btnProfile.setText(bundle.getString("Menu.btnProfile.text")); // NOI18N
        optionsPanel.add(btnProfile);

        btnAdmin.setText(bundle.getString("Menu.btnAdmin.text")); // NOI18N
        optionsPanel.add(btnAdmin);

        contentPanel.add(optionsPanel);

        imageAndNavigationPanel.setLayout(new BoxLayout(imageAndNavigationPanel, BoxLayout.Y_AXIS));

        lblImage.setIcon(new ImageIcon(getClass().getResource("/ImgFondos/Imagen7.png"))); // NOI18N
        imagePanel.add(lblImage);

        imageAndNavigationPanel.add(imagePanel);

        btnClose.setText(bundle.getString("Menu.btnClose.text")); // NOI18N
        btnClose.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        navivgationPanel.add(btnClose);

        btnGetBack.setText(bundle.getString("Menu.btnGetBack.text")); // NOI18N
        btnGetBack.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        btnGetBack.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnGetBackActionPerformed(evt);
            }
        });
        navivgationPanel.add(btnGetBack);

        imageAndNavigationPanel.add(navivgationPanel);

        contentPanel.add(imageAndNavigationPanel);

        getContentPane().add(contentPanel, BorderLayout.CENTER);

        mnuInventory.setText(bundle.getString("Menu.mnuInventory.text")); // NOI18N

        mnuInventories.setText(bundle.getString("Menu.mnuInventories.text")); // NOI18N
        mnuInventories.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                mnuInventoriesActionPerformed(evt);
            }
        });
        mnuInventory.add(mnuInventories);

        mnuBills.setText(bundle.getString("Menu.mnuBills.text")); // NOI18N
        mnuBills.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                mnuBillsActionPerformed(evt);
            }
        });
        mnuInventory.add(mnuBills);

        mnuProvider.setText(bundle.getString("Menu.mnuProvider.text")); // NOI18N
        mnuProvider.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                mnuProviderActionPerformed(evt);
            }
        });
        mnuInventory.add(mnuProvider);

        mnuServices.setText(bundle.getString("Menu.mnuServices.text")); // NOI18N

        mnuOrders.setText(bundle.getString("Menu.mnuOrders.text")); // NOI18N
        mnuOrders.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                mnuOrdersActionPerformed(evt);
            }
        });
        mnuServices.add(mnuOrders);

        mnuTransactions.setText(bundle.getString("Menu.mnuTransactions.text")); // NOI18N
        mnuTransactions.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                mnuTransactionsActionPerformed(evt);
            }
        });
        mnuServices.add(mnuTransactions);

        mnuInventory.add(mnuServices);

        menuBar.add(mnuInventory);

        mnuAbout.setText(bundle.getString("Menu.mnuAbout.text")); // NOI18N

        mnuAboutItem.setText(bundle.getString("Menu.mnuAboutItem.text")); // NOI18N
        mnuAboutItem.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                mnuAboutItemActionPerformed(evt);
            }
        });
        mnuAbout.add(mnuAboutItem);

        mnuGetBack.setText(bundle.getString("Menu.mnuGetBack.text")); // NOI18N
        mnuGetBack.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                mnuGetBackActionPerformed(evt);
            }
        });
        mnuAbout.add(mnuGetBack);

        menuBar.add(mnuAbout);

        setJMenuBar(menuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnInventoryActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnInventoryActionPerformed
        navigationHandler.goToInventoryManagement(this);
    }//GEN-LAST:event_btnInventoryActionPerformed

    private void btnTransactionActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnTransactionActionPerformed
        navigationHandler.goToShopping(this);
    }//GEN-LAST:event_btnTransactionActionPerformed

    private void btnOrdersActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnOrdersActionPerformed
        navigationHandler.goToOrderManagement(this);
    }//GEN-LAST:event_btnOrdersActionPerformed

    private void btnProviderActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnProviderActionPerformed
        navigationHandler.goToProviderManagement(this);
    }//GEN-LAST:event_btnProviderActionPerformed

    private void btnGetBackActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnGetBackActionPerformed
        dispose();
        previouses.pop().setVisible(true);
    }//GEN-LAST:event_btnGetBackActionPerformed

    private void btnBillingActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnBillingActionPerformed
        navigationHandler.goToBillingManagement(this);
    }//GEN-LAST:event_btnBillingActionPerformed

    private void btnAboutActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnAboutActionPerformed
        navigationHandler.goToInformation(this);
    }//GEN-LAST:event_btnAboutActionPerformed

    private void mnuInventoriesActionPerformed(ActionEvent evt) {//GEN-FIRST:event_mnuInventoriesActionPerformed
        navigationHandler.goToInventoryManagement(this);
    }//GEN-LAST:event_mnuInventoriesActionPerformed

    private void mnuAboutItemActionPerformed(ActionEvent evt) {//GEN-FIRST:event_mnuAboutItemActionPerformed
        navigationHandler.goToInformation(this);
    }//GEN-LAST:event_mnuAboutItemActionPerformed

    private void mnuBillsActionPerformed(ActionEvent evt) {//GEN-FIRST:event_mnuBillsActionPerformed
        navigationHandler.goToBillingManagement(this);
    }//GEN-LAST:event_mnuBillsActionPerformed

    private void mnuProviderActionPerformed(ActionEvent evt) {//GEN-FIRST:event_mnuProviderActionPerformed
        navigationHandler.goToProviderManagement(this);
    }//GEN-LAST:event_mnuProviderActionPerformed

    private void mnuOrdersActionPerformed(ActionEvent evt) {//GEN-FIRST:event_mnuOrdersActionPerformed
        navigationHandler.goToOrderManagement(this);
    }//GEN-LAST:event_mnuOrdersActionPerformed

    private void mnuTransactionsActionPerformed(ActionEvent evt) {//GEN-FIRST:event_mnuTransactionsActionPerformed
        navigationHandler.goToShopping(this);
    }//GEN-LAST:event_mnuTransactionsActionPerformed

    private void mnuGetBackActionPerformed(ActionEvent evt) {//GEN-FIRST:event_mnuGetBackActionPerformed
        navigationHandler.goToLogin(this);
    }//GEN-LAST:event_mnuGetBackActionPerformed

    private void btnEmployeeRecordsActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnEmployeeRecordsActionPerformed
        navigationHandler.goToEmployeeRegistration(this);
    }//GEN-LAST:event_btnEmployeeRecordsActionPerformed

    private void btnCreditsActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnCreditsActionPerformed
        navigationHandler.goToCredits(this);
    }//GEN-LAST:event_btnCreditsActionPerformed

    private void btnCloseActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        shutdownManager.confirmExit();
    }//GEN-LAST:event_btnCloseActionPerformed

}
