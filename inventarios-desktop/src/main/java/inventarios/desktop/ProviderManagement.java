/* 
 * Copyright (C) 2019 Ruslan LÃ³pez Carro
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package inventarios.desktop;

import inventarios.desktop.navigation.NavigationHandler;
import inventarios.service.ProviderService;
import inventarios.to.Provider;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import java.util.ResourceBundle;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.LayoutStyle;
import javax.swing.WindowConstants;
import javax.swing.border.BevelBorder;
import javax.swing.border.SoftBevelBorder;
import org.springframework.beans.factory.annotation.Qualifier;

/**
 *
 * @author EfraJiJim
 */
@Component
public class ProviderManagement extends JFrame {

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JTextField txtAddress;
    private JTextField txtEmail;
    private JTextField txtLastName;
    private JTextField txtName;
    private JTextField txtPOBox;
    private JTextField txtProvider;
    private JTextField txtTelephone;
    // End of variables declaration//GEN-END:variables
        
    private NavigationHandler navigationHandler;
    
    private ProviderService providerService;

    /**
     * Creates new form ProveedorVentana
     */
    @Autowired
    public ProviderManagement(@Qualifier("providerManagementVisitor") NavigationHandler navigationHandler, ProviderService providerService) {
        this.navigationHandler = navigationHandler;
        this.providerService = providerService;
        /*
        Se inicializa la Lista
         */
        Lista = new ArrayList<>();
        initComponents();
        this.getContentPane().setBackground(Color.cyan);
    }

  
    ArrayList<Provider> Lista;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JLabel lblName = new JLabel();
        JLabel lblLastName = new JLabel();
        JLabel lblAddress = new JLabel();
        JLabel lblProvider = new JLabel();
        JLabel lblTelephone = new JLabel();
        JLabel lblEmail = new JLabel();
        JLabel lblPOBox = new JLabel();
        txtProvider = new JTextField();
        txtName = new JTextField();
        txtLastName = new JTextField();
        txtAddress = new JTextField();
        txtTelephone = new JTextField();
        txtEmail = new JTextField();
        txtPOBox = new JTextField();
        JButton btnAdd = new JButton();
        JButton btnClose = new JButton();
        JButton btnClean = new JButton();
        JButton btnSearch = new JButton();
        JButton btnMenu = new JButton();

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        ResourceBundle bundle = ResourceBundle.getBundle("inventarios/gui/desktop/Bundle"); // NOI18N
        setTitle(bundle.getString("ProviderManagement.title")); // NOI18N
        setIconImage(new ImageIcon(getClass().getResource("/ImgFondos/Icono.png")).getImage());
        setResizable(false);

        lblName.setText(bundle.getString("ProviderManagement.lblName.text")); // NOI18N

        lblLastName.setText(bundle.getString("ProviderManagement.lblLastName.text")); // NOI18N

        lblAddress.setText(bundle.getString("ProviderManagement.lblAddress.text")); // NOI18N

        lblProvider.setText(bundle.getString("ProviderManagement.lblProvider.text")); // NOI18N

        lblTelephone.setText(bundle.getString("ProviderManagement.lblTelephone.text")); // NOI18N

        lblEmail.setText(bundle.getString("ProviderManagement.lblEmail.text")); // NOI18N

        lblPOBox.setText(bundle.getString("ProviderManagement.lblPOBox.text")); // NOI18N

        txtProvider.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent evt) {
                txtProviderKeyTyped(evt);
            }
        });

        btnAdd.setIcon(new ImageIcon(getClass().getResource("/ImgLetras/agregar1.png"))); // NOI18N
        btnAdd.setBorder(null);
        btnAdd.setContentAreaFilled(false);
        btnAdd.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        btnAdd.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnClose.setIcon(new ImageIcon(getClass().getResource("/ImgLetras/cerrar.png"))); // NOI18N
        btnClose.setBorder(null);
        btnClose.setContentAreaFilled(false);
        btnClose.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        btnClose.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        btnClean.setIcon(new ImageIcon(getClass().getResource("/ImgLetras/Limpiar_1.png"))); // NOI18N
        btnClean.setBorder(null);
        btnClean.setContentAreaFilled(false);
        btnClean.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        btnClean.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnCleanActionPerformed(evt);
            }
        });

        btnSearch.setIcon(new ImageIcon(getClass().getResource("/ImgLetras/consulta.png"))); // NOI18N
        btnSearch.setBorder(null);
        btnSearch.setContentAreaFilled(false);
        btnSearch.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        btnSearch.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnMenu.setBackground(new Color(0, 0, 255));
        btnMenu.setFont(new Font("Tahoma", 1, 24)); // NOI18N
        btnMenu.setText(bundle.getString("ProviderManagement.btnMenu.text")); // NOI18N
        btnMenu.setBorder(new SoftBevelBorder(BevelBorder.RAISED));
        btnMenu.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnMenuActionPerformed(evt);
            }
        });

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblProvider)
                                .addGap(18, 18, 18)
                                .addComponent(txtProvider, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblName)
                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtName, GroupLayout.PREFERRED_SIZE, 70, GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblAddress)
                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtAddress, GroupLayout.PREFERRED_SIZE, 70, GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblLastName)
                                        .addGap(14, 14, 14)
                                        .addComponent(txtLastName, GroupLayout.PREFERRED_SIZE, 70, GroupLayout.PREFERRED_SIZE)))
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                    .addComponent(lblPOBox)
                                    .addComponent(lblTelephone)
                                    .addComponent(lblEmail))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                    .addComponent(txtEmail, GroupLayout.PREFERRED_SIZE, 70, GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTelephone, GroupLayout.PREFERRED_SIZE, 70, GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPOBox, GroupLayout.PREFERRED_SIZE, 70, GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addComponent(btnMenu)))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                        .addComponent(btnClean)
                        .addComponent(btnAdd))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(btnClose)
                            .addComponent(btnSearch))))
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(lblProvider)
                            .addComponent(txtProvider, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(lblName)
                            .addComponent(lblTelephone)
                            .addComponent(txtName, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTelephone, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(lblLastName)
                            .addComponent(lblEmail)
                            .addComponent(txtLastName, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEmail, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(btnAdd)
                        .addGap(18, 18, 18)
                        .addComponent(btnClean)))
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAddress)
                            .addComponent(lblPOBox)
                            .addComponent(txtAddress, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPOBox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btnSearch, GroupLayout.PREFERRED_SIZE, 42, GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(btnClose)
                    .addComponent(btnMenu))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCleanActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnCleanActionPerformed
        txtProvider.setText("");
        txtName.setText("");
        txtLastName.setText("");
        txtAddress.setText("");
        txtTelephone.setText("");
        txtEmail.setText("");
        txtPOBox.setText("");
    }//GEN-LAST:event_btnCleanActionPerformed

    /**
     * Closes the window
     *
     * @param evt event performen on the visual component
     */
    private void btnCloseActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        navigationHandler.goToMenu(this);
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnAddActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        String Num = txtProvider.getText();
        String Nombre = txtName.getText();
        String Apellidos = txtLastName.getText();
        String Direccion = txtAddress.getText();
        String Telefono = txtTelephone.getText();
        String Mail = txtEmail.getText();
        String CodPost = txtPOBox.getText();

        Provider provider = new Provider(null,Nombre, Direccion, Apellidos, Num, Telefono, Mail, CodPost);
        providerService.save(provider);

        txtProvider.setText("");
        txtName.setText("");
        txtLastName.setText("");
        txtAddress.setText("");
        txtTelephone.setText("");
        txtEmail.setText("");
        txtPOBox.setText("");
    }//GEN-LAST:event_btnAddActionPerformed

    private void txtProviderKeyTyped(KeyEvent evt) {//GEN-FIRST:event_txtProviderKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProviderKeyTyped

    private void btnSearchActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        navigationHandler.goToFrame(this, ListaProveedores.class);
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnMenuActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnMenuActionPerformed
        navigationHandler.goToMenu(this);
    }//GEN-LAST:event_btnMenuActionPerformed
    //Método para confirmar el cierre deJFrame//

    public void cerrar() {
        try {
            this.setDefaultCloseOperation(ProviderManagement.DO_NOTHING_ON_CLOSE);
            addWindowListener(new WindowAdapter() {
                @Override
                public void windowClosing(WindowEvent e) {
                    confirmarSalida();
                }
            });
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    //Confirmar salida//
    public void confirmarSalida() {
        int valor = JOptionPane.showConfirmDialog(this, "¿Desea cerrar todas las ventanas abiertas?", "Advertencia", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        if (valor == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }

}
