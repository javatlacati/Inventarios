/* 
 * Copyright (C) 2019 Ruslan LÃ³pez Carro
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package inventarios.desktop;

import inventarios.desktop.navigation.NavigationHandler;
import inventarios.util.ShutdownManager;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.LinkedList;
import java.util.ResourceBundle;
import org.springframework.beans.factory.annotation.Qualifier;

/**
 *
 * @author Personal
 */
@Component
public class BillingManagement extends JFrame {

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JTextField txtCorporativeName;
    private JTextField txtCountry;
    private JTextField txtEmail;
    private JTextField txtInsideNumber;
    private JTextField txtLocality;
    private JTextField txtMunicipality;
    private JTextField txtNeighborhood;
    private JTextField txtOutsideNumber;
    private JTextField txtPOBox;
    private JTextField txtRfc;
    private JTextField txtState;
    private JTextField txtStreet;
    // End of variables declaration//GEN-END:variables

    private NavigationHandler navigationHandler;

    private ShutdownManager shutdownManager;

    @Autowired
    public BillingManagement(
            @Qualifier("billingManagementVisitor") NavigationHandler navigationHandler,
            ShutdownManager shutdownManager
    ) throws HeadlessException {
        this.navigationHandler = navigationHandler;
        this.shutdownManager = shutdownManager;
    }

    public static LinkedList contenedor = new LinkedList();

    /**
     * Creates new form FacturaciónVentana
     */
    public BillingManagement() {
        initComponents();
        cerrar();
        this.getContentPane().setBackground(Color.cyan);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JPanel applicationContent = new JPanel();
        JPanel pnlFields = new JPanel();
        JLabel lblRfc = new JLabel();
        txtRfc = new JTextField();
        JLabel lblCorporativeName = new JLabel();
        txtCorporativeName = new JTextField();
        JLabel lblStreet = new JLabel();
        txtStreet = new JTextField();
        JLabel lblOutsideNumber = new JLabel();
        txtOutsideNumber = new JTextField();
        JLabel lblInsideNumber = new JLabel();
        txtInsideNumber = new JTextField();
        JLabel lblNeighborhood = new JLabel();
        txtNeighborhood = new JTextField();
        JLabel lblLocality = new JLabel();
        txtLocality = new JTextField();
        JLabel lblMunicipality = new JLabel();
        txtMunicipality = new JTextField();
        JLabel lblState = new JLabel();
        txtState = new JTextField();
        JLabel lblPOBox = new JLabel();
        txtPOBox = new JTextField();
        JLabel lblCountry = new JLabel();
        txtCountry = new JTextField();
        JLabel lblEMail = new JLabel();
        txtEmail = new JTextField();
        JPanel pnlOptions = new JPanel();
        JButton btnMenu = new JButton();
        JButton btnClean = new JButton();
        JButton btnView = new JButton();
        JButton btnClose = new JButton();

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        ResourceBundle bundle = ResourceBundle.getBundle("inventarios/gui/desktop/Bundle"); // NOI18N
        setTitle(bundle.getString("BillingManagement.title")); // NOI18N
        setIconImage(new ImageIcon(getClass().getResource("/ImgFondos/Icono.png")).getImage());
        getContentPane().setLayout(new GridLayout(1, 1));

        applicationContent.setBorder(BorderFactory.createEmptyBorder(30, 30, 30, 30));
        applicationContent.setLayout(new GridLayout(1, 0, 35, 0));

        pnlFields.setLayout(new GridLayout(12, 2, 10, 15));

        lblRfc.setText(bundle.getString("BillingManagement.lblRfc.text")); // NOI18N
        pnlFields.add(lblRfc);
        pnlFields.add(txtRfc);

        lblCorporativeName.setText(bundle.getString("BillingManagement.lblCorporativeName.text")); // NOI18N
        pnlFields.add(lblCorporativeName);
        pnlFields.add(txtCorporativeName);

        lblStreet.setText(bundle.getString("BillingManagement.lblStreet.text")); // NOI18N
        pnlFields.add(lblStreet);
        pnlFields.add(txtStreet);

        lblOutsideNumber.setText(bundle.getString("BillingManagement.lblOutsideNumber.text")); // NOI18N
        pnlFields.add(lblOutsideNumber);
        pnlFields.add(txtOutsideNumber);

        lblInsideNumber.setText(bundle.getString("BillingManagement.lblInsideNumber.text")); // NOI18N
        pnlFields.add(lblInsideNumber);
        pnlFields.add(txtInsideNumber);

        lblNeighborhood.setText(bundle.getString("BillingManagement.lblNeighborhood.text")); // NOI18N
        pnlFields.add(lblNeighborhood);
        pnlFields.add(txtNeighborhood);

        lblLocality.setText(bundle.getString("BillingManagement.lblLocality.text")); // NOI18N
        pnlFields.add(lblLocality);
        pnlFields.add(txtLocality);

        lblMunicipality.setText(bundle.getString("BillingManagement.lblMunicipality.text")); // NOI18N
        pnlFields.add(lblMunicipality);
        pnlFields.add(txtMunicipality);

        lblState.setText(bundle.getString("BillingManagement.lblState.text")); // NOI18N
        pnlFields.add(lblState);
        pnlFields.add(txtState);

        lblPOBox.setText(bundle.getString("BillingManagement.lblPOBox.text")); // NOI18N
        pnlFields.add(lblPOBox);
        pnlFields.add(txtPOBox);

        lblCountry.setText(bundle.getString("BillingManagement.lblCountry.text")); // NOI18N
        pnlFields.add(lblCountry);
        pnlFields.add(txtCountry);

        lblEMail.setText(bundle.getString("BillingManagement.lblEMail.text")); // NOI18N
        pnlFields.add(lblEMail);
        pnlFields.add(txtEmail);

        applicationContent.add(pnlFields);

        pnlOptions.setLayout(new GridLayout(4, 1));

        btnMenu.setBackground(new Color(255, 0, 255));
        btnMenu.setFont(new Font("Tahoma", 1, 14)); // NOI18N
        btnMenu.setText(bundle.getString("BillingManagement.btnMenu.text")); // NOI18N
        btnMenu.setBorder(BorderFactory.createLineBorder(new Color(0, 0, 0)));
        btnMenu.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnMenuActionPerformed(evt);
            }
        });
        pnlOptions.add(btnMenu);

        btnClean.setIcon(new ImageIcon(getClass().getResource("/ImgLetras/Limpiar_1.png"))); // NOI18N
        btnClean.setBorder(null);
        btnClean.setContentAreaFilled(false);
        btnClean.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnCleanActionPerformed(evt);
            }
        });
        pnlOptions.add(btnClean);

        btnView.setIcon(new ImageIcon(getClass().getResource("/ImgLetras/consulta.png"))); // NOI18N
        btnView.setBorder(null);
        btnView.setContentAreaFilled(false);
        btnView.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });
        pnlOptions.add(btnView);

        btnClose.setIcon(new ImageIcon(getClass().getResource("/ImgLetras/cerrar.png"))); // NOI18N
        btnClose.setBorder(null);
        btnClose.setContentAreaFilled(false);
        btnClose.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        pnlOptions.add(btnClose);

        applicationContent.add(pnlOptions);

        getContentPane().add(applicationContent);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCleanActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnCleanActionPerformed
        clearFields();
    }//GEN-LAST:event_btnCleanActionPerformed

    /**
     * limpia el contenido de todos los TextField
     */
    private void clearFields() {
        txtRfc.setText("");
        txtCorporativeName.setText("");
        txtStreet.setText("");
        txtOutsideNumber.setText("");
        txtInsideNumber.setText("");
        txtNeighborhood.setText("");
        txtLocality.setText("");
        txtMunicipality.setText("");
        txtState.setText("");
        txtCountry.setText("");
        txtPOBox.setText("");
        txtEmail.setText("");
    }

    private void btnViewActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        navigationHandler.goToFrame(this, BillingList.class);
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnCloseActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        navigationHandler.goToMenu(this);
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnMenuActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnMenuActionPerformed
        navigationHandler.goToMenu(this);
    }//GEN-LAST:event_btnMenuActionPerformed
    public void cerrar() {
        try {
            this.setDefaultCloseOperation(BillingManagement.DO_NOTHING_ON_CLOSE);
            addWindowListener(new WindowAdapter() {
                public void windowClosing(WindowEvent e) {
                    shutdownManager.confirmExit();
                }
            });
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
