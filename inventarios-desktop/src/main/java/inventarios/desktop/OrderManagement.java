/* 
 * Copyright (C) 2019 Ruslan LÃ³pez Carro
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package inventarios.desktop;

/*
Se importa la paqueteria a utilizar
 */

import com.toedter.calendar.JDateChooser;
import inventarios.desktop.navigation.NavigationHandler;
import inventarios.to.OrderDetail;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Component;

import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import java.util.ResourceBundle;
import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.LayoutStyle;
import javax.swing.SwingConstants;
import javax.swing.WindowConstants;
import javax.swing.border.BevelBorder;
import javax.swing.border.SoftBevelBorder;

/**
 *
 * @author EfraJiJim
 */
@Component
public class OrderManagement extends javax.swing.JFrame {


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JTextField txtAddress;
    private JTextField txtEmployee;
    private JTextField txtLastName;
    private JTextField txtName;
    private JDateChooser txtOrderDate;
    private JTextField txtOrderNo;
    private JTextField txtProduct;
    private JTextField txtRfc;
    private JTextField txtTelephone;
    // End of variables declaration//GEN-END:variables
    
    private NavigationHandler navigationHandler;

    /**
     * Creates new form PedidosVetana
     */
    @Autowired
    public OrderManagement(@Qualifier("orderManagementVisitor") NavigationHandler navigationHandler) {
        this.navigationHandler = navigationHandler;
        /*
        Se inicializa la Lista
         */

        initComponents();
        this.getContentPane().setBackground(Color.cyan);
        this.setIconImage(new ImageIcon(getClass().getResource("/ImgFondos/Icono.png")).getImage());
        cerrar();
    }
    
    

    public static List<OrderDetail> contenedor = new LinkedList<>();
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        GridBagConstraints gridBagConstraints;

        JLabel lblOrderNo = new JLabel();
        JLabel lblName = new JLabel();
        JLabel blLastName = new JLabel();
        JLabel lblProduct = new JLabel();
        JLabel lblRfc = new JLabel();
        JLabel lblTelephone = new JLabel();
        JLabel lblEmployee = new JLabel();
        txtOrderNo = new JTextField();
        txtName = new JTextField();
        txtLastName = new JTextField();
        txtProduct = new JTextField();
        txtRfc = new JTextField();
        txtTelephone = new JTextField();
        txtEmployee = new JTextField();
        JLabel lblAddress = new JLabel();
        txtAddress = new JTextField();
        JLabel lblOrderDate = new JLabel();
        txtOrderDate = new JDateChooser();
        JPanel PnlOptions = new JPanel();
        JButton btnAdd = new JButton();
        JButton btnClean = new JButton();
        JButton btnView = new JButton();
        JButton btnClose = new JButton();
        JButton btnGetBack = new JButton();
        JButton btnMenu = new JButton();

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        ResourceBundle bundle = ResourceBundle.getBundle("inventarios/gui/desktop/Bundle"); // NOI18N
        setTitle(bundle.getString("OrderManagement.title")); // NOI18N
        setResizable(false);

        lblOrderNo.setText(bundle.getString("OrderManagement.lblOrderNo.text")); // NOI18N

        lblName.setText(bundle.getString("OrderManagement.lblName.text")); // NOI18N

        blLastName.setText(bundle.getString("OrderManagement.blLastName.text")); // NOI18N

        lblProduct.setText(bundle.getString("OrderManagement.lblProduct.text")); // NOI18N

        lblRfc.setText(bundle.getString("OrderManagement.lblRfc.text")); // NOI18N

        lblTelephone.setText(bundle.getString("OrderManagement.lblTelephone.text")); // NOI18N

        lblEmployee.setText(bundle.getString("OrderManagement.lblEmployee.text")); // NOI18N

        txtOrderNo.setPreferredSize(new Dimension(70, 25));
        txtOrderNo.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent evt) {
                txtOrderNoKeyTyped(evt);
            }
        });

        txtName.setPreferredSize(new Dimension(70, 25));

        txtLastName.setPreferredSize(new Dimension(70, 25));

        txtProduct.setPreferredSize(new Dimension(70, 25));

        txtRfc.setPreferredSize(new Dimension(70, 25));

        txtTelephone.setPreferredSize(new Dimension(70, 25));

        txtEmployee.setPreferredSize(new Dimension(70, 25));

        lblAddress.setText(bundle.getString("OrderManagement.lblAddress.text")); // NOI18N

        lblOrderDate.setText(bundle.getString("OrderManagement.lblOrderDate.text")); // NOI18N

        PnlOptions.setLayout(new GridBagLayout());

        btnAdd.setIcon(new ImageIcon(getClass().getResource("/ImgLetras/agregar1.png"))); // NOI18N
        btnAdd.setBorder(null);
        btnAdd.setContentAreaFilled(false);
        btnAdd.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        btnAdd.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        PnlOptions.add(btnAdd, new GridBagConstraints());

        btnClean.setIcon(new ImageIcon(getClass().getResource("/ImgLetras/Limpiar_1.png"))); // NOI18N
        btnClean.setBorder(null);
        btnClean.setContentAreaFilled(false);
        btnClean.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        btnClean.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnCleanActionPerformed(evt);
            }
        });
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        PnlOptions.add(btnClean, gridBagConstraints);

        btnView.setIcon(new ImageIcon(getClass().getResource("/ImgLetras/consulta.png"))); // NOI18N
        btnView.setBorder(null);
        btnView.setContentAreaFilled(false);
        btnView.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        btnView.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        PnlOptions.add(btnView, gridBagConstraints);

        btnClose.setIcon(new ImageIcon(getClass().getResource("/ImgLetras/cerrar.png"))); // NOI18N
        btnClose.setBorder(null);
        btnClose.setContentAreaFilled(false);
        btnClose.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        btnClose.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        PnlOptions.add(btnClose, gridBagConstraints);

        btnGetBack.setBackground(new Color(255, 51, 204));
        btnGetBack.setFont(new Font("Tempus Sans ITC", 1, 24)); // NOI18N
        btnGetBack.setText(bundle.getString("OrderManagement.btnGetBack.text")); // NOI18N
        btnGetBack.setBorder(BorderFactory.createLineBorder(new Color(0, 0, 0)));
        btnGetBack.setHorizontalTextPosition(SwingConstants.CENTER);
        btnGetBack.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnGetBackActionPerformed(evt);
            }
        });
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        PnlOptions.add(btnGetBack, gridBagConstraints);

        btnMenu.setBackground(new Color(0, 0, 255));
        btnMenu.setFont(new Font("Tahoma", 1, 24)); // NOI18N
        btnMenu.setText(bundle.getString("OrderManagement.btnMenu.text")); // NOI18N
        btnMenu.setBorder(new SoftBevelBorder(BevelBorder.RAISED));
        btnMenu.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnMenuActionPerformed(evt);
            }
        });
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        PnlOptions.add(btnMenu, gridBagConstraints);

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                            .addComponent(blLastName)
                            .addComponent(lblName)
                            .addComponent(lblOrderNo)
                            .addComponent(lblProduct)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(lblAddress, GroupLayout.PREFERRED_SIZE, 55, GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(txtOrderNo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAddress, GroupLayout.PREFERRED_SIZE, 70, GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(txtName, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtLastName, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtProduct, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                            .addComponent(lblEmployee)
                            .addComponent(lblTelephone)
                            .addGroup(GroupLayout.Alignment.LEADING, layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                                .addComponent(lblRfc)
                                .addComponent(lblOrderDate)))))
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtTelephone, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtEmployee, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtRfc, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtOrderDate, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(PnlOptions, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );
        layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(lblOrderNo)
                            .addComponent(txtOrderNo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(lblName)
                            .addComponent(txtName, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEmployee)
                            .addComponent(txtEmployee, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(blLastName)
                            .addComponent(txtLastName, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTelephone, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTelephone))
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblProduct)
                                    .addComponent(txtProduct, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtRfc, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblRfc))))
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(txtOrderDate, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                .addComponent(lblAddress)
                                .addComponent(txtAddress, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblOrderDate, GroupLayout.PREFERRED_SIZE, 14, GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(PnlOptions, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        dispose();
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnCleanActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnCleanActionPerformed
        clearFields();
    }//GEN-LAST:event_btnCleanActionPerformed

    /**
     * Aplicamos estos codigos para eliminar el contenido de los TexField's
     */
    private void clearFields() {
        txtOrderNo.setText("");
        txtName.setText("");
        txtLastName.setText("");
        txtProduct.setText("");
        txtRfc.setText("");
        txtTelephone.setText("");
        txtEmployee.setText("");
        txtAddress.setText("");
        txtOrderDate.cleanup();
    }

    private void btnAddActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        /*
        Declaramos las variables donde se guardara el contenido para los TextFiel
         */
        String NumPedido = txtOrderNo.getText();
        String name = txtName.getText();
        String lastName = txtLastName.getText();
        //String Producto = txtProduct.getText();
        String RFC = txtRfc.getText();
        String Telefono = txtTelephone.getText();
//        String Empleado = txtEmployee.getText();
        String Direccion = txtAddress.getText();
        Date date = txtOrderDate.getDate();
        /*
        Se hace la instancia para guardar los datos en el ArrayList
         */
        OrderDetail Ped = new OrderDetail(null, NumPedido, null, null, date);
        contenedor.add(Ped);

        clearFields();
    }//GEN-LAST:event_btnAddActionPerformed

    private void txtOrderNoKeyTyped(KeyEvent evt) {//GEN-FIRST:event_txtOrderNoKeyTyped

    }//GEN-LAST:event_txtOrderNoKeyTyped

    private void btnViewActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        navigationHandler.goToOrderList(this);
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnMenuActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnMenuActionPerformed
       navigationHandler.goToMenu(this);
    }//GEN-LAST:event_btnMenuActionPerformed

    private void btnGetBackActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnGetBackActionPerformed
        navigationHandler.goToMenu(this);
    }//GEN-LAST:event_btnGetBackActionPerformed
    //Método para confirmar el cierre deJFrame//

    public void cerrar() {
        try {
            this.setDefaultCloseOperation(OrderManagement.DO_NOTHING_ON_CLOSE);
            addWindowListener(new WindowAdapter() {
                public void windowClosing(WindowEvent e) {
                    confirmarSalida();
                }
            });
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    //Confirmar salida//
    public void confirmarSalida() {
        int valor = JOptionPane.showConfirmDialog(this, "¿Desea cerrar todas las ventanas abiertas?", "Advertencia", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        if (valor == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }

}
